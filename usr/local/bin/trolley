#!/usr/bin/env python

import os
import argparse
import urllib2
import json

__version__ = '0.1.1'
host    = 'http://boxcar-addons-staging.herokuapp.com'

def _get(path):
  response = urllib2.urlopen(host + path)
  return json.load(response)

def install(args):
  print "Getting package data"
  packages_path = '/packages/' + args.name

  if args.version:
    packages_path += '/' + args.version

  package = _get(packages_path)

  if not args.version:
    package = package[0]

  # Download package
  print "Downloading " + package['name']
  os.system('wget -q http://slackware.cs.utah.edu/pub/slackware/' + package['path'])

  # Install package
  print "Installing"
  os.system('installpkg ' + package['package_name'])

def remove(args):
  os.system('removepkg ' + args.name)

def search(args):
  packages = _get('/packages/search?q=' + args.name)

  if packages:
    print "Package Name (Slackware 14.0, 13.37, 13.1)"
    print "=========================================="
    if packages:
      for p in packages:
        print p['name'] + " (" + ', '.join(p['versions']) + ")"

def list_packages():
  installed_packages = os.listdir('/var/log/packages/')
  for package in installed_packages:
    print package

def update(args):
  response = urllib2.urlopen('https://api.github.com/repos/nicinabox/trolley/tags')
  tags = json.load(response)

  if tags[0]['name'] == __version__:
     exit('Already on latest')
  else:
    filename = 'trolley-{0}-i486-1.tgz'.format(tags[0]['name'])
    wget = 'wget -q {0} -O 1'.format(tags[0]['tarball_url'], filename)
    os.system(wget)
    os.system('installpkg ' + filename)

def main():
  arger = argparse.ArgumentParser()
  subparsers = arger.add_subparsers(dest="command")

  arger.add_argument('-v', '--version',
                      action="version",
                      version='%(prog)s ' + __version__,
                      help="Show version")

  # Install
  install_parser = subparsers.add_parser("install", help="Install a package by name")
  install_parser.add_argument('name')
  install_parser.add_argument('version', nargs="?")
  install_parser.set_defaults(func=install)

  # Remove
  remove_parser = subparsers.add_parser("remove", help="Remove installed package by name")
  remove_parser.add_argument('name')
  remove_parser.set_defaults(func=remove)

  # List
  list_parser = subparsers.add_parser("list", help="List installed packages")
  list_parser.set_defaults(func=list_packages)

  # Search
  search_parser = subparsers.add_parser("search", help="Find a package by name")
  search_parser.add_argument('name')
  search_parser.set_defaults(func=search)

  # Update
  update_parser = subparsers.add_parser("update", help="Update trolley")
  update_parser.set_defaults(func=update)

  # Parse
  args = arger.parse_args()
  args.func(args)

if __name__ == '__main__':
  main()
